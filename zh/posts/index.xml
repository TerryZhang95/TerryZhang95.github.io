<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on TERRY HOME</title>
    <link>/zh/posts/</link>
    <description>Recent content in Posts on TERRY HOME</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 16 Mar 2021 18:46:19 +1100</lastBuildDate>
    
	<atom:link href="/zh/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>新州路考fail经历分享</title>
      <link>/zh/2021/03/20210316/</link>
      <pubDate>Tue, 16 Mar 2021 18:46:19 +1100</pubDate>
      
      <guid>/zh/2021/03/20210316/</guid>
      <description>背景 我在悉尼已经开了五年的车了，虽然在国内也有开，但那个时候刚拿驾照，技术很一般，就先不算了。
虽然开了这么久的车，对这次路考依然保持着很认真的态度和敬畏的紧张感
前一段时间也有找教练练习过两个小时，对路线和考试规则都有一定的掌握，今天在考前也在youtube上看了各种路考的视频，准备还算是很充分了
关于老司机是否需要找教练带着练的问题，我个人觉得是不太需要的；有几个重点的地方知道了就好，问一下刚考过试的朋友或者网上随便查一下
教练带着你开一遍，无非也就是把你网上查得到的东西和你再说一遍，你有机会实践一下，还能让教练看一下你实践的是否正确，但也仅此而已
如果一看是很成熟的司机，教练一般也不会说什么
之前也听说过，这帮傻*考官喜欢搞事情，身边很多老司机朋友，都考了好几次才过；担心想这么寸的事情不会让我赶上吧
这大概是我保留的唯一的侥幸心理
考试之前 我选择了north ryde的考点，据说是相对简单的考点，大概是因为车相对少？不过对于住在这附近的人来说，我并没有觉得路有多好开，毕竟这么多年在悉尼，东南西北基本都搬过了，早晚高峰的epping rd不比parramatta rd强多少。况且Parramatta rd还堵车，你还不会超速
这是后话了等下再说
下午的service centre人满为患，建议还是早去一点比较好，无论是knowledge test还是driving test，都是差不多到时间去就可以安排考试的，早去早结束；当然稍微迟到一点，关系也不大
选车的话，我就用我自己的车，之前有考虑过借个小车来考试，因为我的SUV还是有点大
但是后来想想还是算了，一个是借车还是租车都有成本，万一出了事故都麻烦，再一个自己车路感熟悉，配置还高一点，前后雷达啥的都有；如果自己的车比较好的话，考官是不是坐着也比较舒服，凭车是不是还有个印象分
安排上考试了之后，先会和他登记一些材料，然后这个人就直接会带着你去考试了
开考之前，会先对车进行一个基本的check，新州的话就只有外观轮胎，左右转向灯和刹车灯
车里如果有屏幕什么的，都是要处于关闭状态，行车记录仪也要关闭，然后就可以听指挥开始了
考试开始了 我可以说非常谨慎和认真的在驾驶，这么一段路我可以说天天都会走，但从没这么累的开过
也不卖关子，我就是fail在了从mq center拐出来的那条路上，具体路名记不清了，限速是50，但周围车基本都是70在开的，我当时大概是开到了55-60之间，而且只是一瞬间左右，因为我完全对车灯发誓我是时刻留意着速度的，但就被他发现了，甚至还提醒我一句，我都不知道他是真看到我的速度表还是蒙的，anyway，当这种场景出现了，被傻*考官提醒了，那基本就意味着fail了
我当时也不知道，还以为是善意的提醒，后来才反应过来，这个傻*地方怎么可能会有善意的提醒？！连善意都不会有
但他也不会和你说什么，还会让你像正常考试一样把后续完成了，我要早知道他在那个时候就fail我了，就应该像个正常人一样开完后面，何必搞得大家都这么累，你也想早点下班不是？
考的小项是kerb side parking和reverse parking，都是随便找个kerb停下就好，区别就是一个在空旷的kerb停，一个是在一个车后面停，只要回头把各种headcheck做好就没问题，多回头瞅两眼，然后该看倒车影像就看，停的离kerb远还是近都没关系
启动车离开kerb的时候，也要记住等待时间和回头check。估计是因为我车大，没有考三点掉头，不过应该也一样，就看你的headcheck
我考的是下午4点的，虽然过了school zone，但是到了下班时间，车和人都很多，在小路里，前面一辆公交车在等着上人，我甚至都在后面老老实实的等，身后的车估计是看出来在考试了，一个个从我身边疾驰而过；个人觉得school zone没什么可担心的，无非就是速度降下来就好了，其实正常在小路里也就是40的速度
give way和stop line的话，感觉也是看headcheck，stop line等个三五秒再走，和正常开车一样；直行出转盘的时候记得打个转向，这个点不做会扣分，但是也不会直接fail
一路上他会一直和你聊些有的没的，问问你车怎么样啊，问问你是干啥的啊，防止气氛过于尴尬，挂了我还得把戏做足
结束之后他还不会立刻告诉你结果，傻*，笑嘻嘻的好像多挂一个人是在冲KPI，一直要到他回到service centre磨磨唧唧弄一堆材料之后，才会和你说过没过
结束和反思 先喷一下这个考试制度，不是我无理取闹，确实有其不合理的地方。主观臆想太强，哪怕在车上装个测速仪，或者装个摄像头记着我的速度表，如果超了拿出点铁证让我服，我什么都不说。
再一点，如果已经fail了，能不能就让过程结束？浪费时间和精力，结果我拿到成绩单，下面的什么成绩都没有，完全不给人argue的权利。未来想报复社会就可以从事这个行业了，心情不爽，把今天来考试的人全给挂了，一点还手的余地都没有
不过我对自己也是有反思的，我后来回过神来也在想，是不是他在问我速度的时候，我说我没超速刚好压在50的线上，能不能开脱一下？反正他在第二视角完全看不清我的速度，从侧面看也都有很大偏差，我如果挣扎一下是不是还有机会？极致卑微
莫非他们真的有业绩要求，与我同时考试的这批人，都被各种奇葩理由给挂了，然而这对我构不成任何安慰，因为毕竟不能用车我的生活真的会受到严重影响；当然这个话我有和傻*考官说，然并卵，我的生活没有他的KPI重要
再有一点，没有任何racist的意味，如果能遇到华人考官应该是最好的吧；相反对于食物链底端的被考者而言，我们更care是考官是不是有什么种族意识呢
如果海外驾照想要转full license，但是路考fail的话，就被issue一个L的拍照；当我的车被挂上L牌的一瞬间，我又深感焦虑和耻辱，不知道接下来几周没有车的日子该怎么办，该怎么去学校啊，难道每天一个小时火车么，又回到刚来悉尼时凄惨的样子么。。起点果然又是终点，我这可能很快就离开悉尼了，结果又开始了最初来到时的生活
也感谢今天在考场认识的一个驾校教练，虽然是来忽悠我报课的，但也热情的帮了我一下。毕竟我的L牌，需要一个full license坐在旁边才能把车开回家。
已经报名下一次考试了，希望能顺利吧。</description>
    </item>
    
    <item>
      <title>CSI的采集原理</title>
      <link>/zh/2021/03/csi_1/</link>
      <pubDate>Tue, 09 Mar 2021 01:17:13 +1100</pubDate>
      
      <guid>/zh/2021/03/csi_1/</guid>
      <description>目前从事wifi定位相关研究，有相同研究兴趣的小伙伴欢迎沟通交流哈，陆续更新</description>
    </item>
    
    <item>
      <title>Linux中无线协议的MAC header分析</title>
      <link>/zh/2020/04/frame_control/</link>
      <pubDate>Wed, 08 Apr 2020 23:54:33 +1000</pubDate>
      
      <guid>/zh/2020/04/frame_control/</guid>
      <description>协议及linux内核源码的关系 源码部分 回顾linux源码的几个重要知识点：
 skb是不同传输层级之间传递的数据包 skb中存在head，data，tail，end等多个指针将skb分成几块，用来存储数据 skb-&amp;gt;data后会存放ieee80211_hdr信息，代码的表现即为 1  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *) skb-&amp;gt;data;   那么这一部分hdr信息即为协议中MAC层的header信息  IEEE80211 协议 IEEE 80211协议，定义了MAC frame的形式 80211frame
 2 Byte – Frame Control 2 Byte – Duration/ID 4×6 Byte – Address 1 – 4 2 Byte – Sequence Control 2 Byte – QoS control 4 Byte – HT Control (only for 802.11n frames)  在源码中的表现即为
1 2 3 4 5 6 7 8 9 10  struct ieee80211_hdr {__le16 frame_control;__le16 duration_id;u8 addr1[ETH_ALEN];u8 addr2[ETH_ALEN];u8 addr3[ETH_ALEN];__le16 seq_ctrl;u8 addr4[ETH_ALEN];int flag;} __packed __aligned(2);  Frame control 具体分析 mac-framecontrol-04</description>
    </item>
    
    <item>
      <title>Latex基本使用教程</title>
      <link>/zh/2020/04/latex/</link>
      <pubDate>Sun, 05 Apr 2020 19:27:32 +1000</pubDate>
      
      <guid>/zh/2020/04/latex/</guid>
      <description>关于latex的一些基本使用</description>
    </item>
    
    <item>
      <title>linux开源驱动mac80211,ath9k开发笔记之发送tx</title>
      <link>/zh/2020/03/linux_ath9k_driver/</link>
      <pubDate>Thu, 19 Mar 2020 15:41:19 +1100</pubDate>
      
      <guid>/zh/2020/03/linux_ath9k_driver/</guid>
      <description>持续更新&amp;hellip;
前言 本文依据个人理解，也是结合在开发过程中遇到的坑和经验来进行的总结和分析。因为个人着重于ath9k的驱动开发，所以重点将围绕ath9k和mac80211展开。此文档的说明顺序和教科书也会有所差别，先从ath9k开始介绍，然后在追溯到mac80211，想当于由下至上的过程，希望能有所帮助。
框架介绍 ath9k传输和接收
 简单来看，发送阶段，userspace（linux内核）向下传的包，也就是所谓的sk_buff，会经过一系列的添加header和tailer的过程，最后进入mac80211 ath9k，也就是一种网卡的驱动，扮演在mac80211和网卡硬件之间的一个接口（API） ath9k会直接调度硬件上包的发送  ath9k的接口 ath9k发送的入口&amp;ndash; ath_tx 1 2 3  static void ath9k_tx(struct ieee80211_hw *hw,struct ieee80211_tx_control *control,struct sk_buff *skb)   从mac80211下来的包，会直接call到ath9k_tx这个api 在main.c中，定义了  1 2 3 4 5 6  struct ieee80211_ops ath9k_ops = {.tx = ath9k_tx,.start = ath9k_start,.stop = ath9k_stop,...}   所以后续会以ath9k_ops这个结构体去回调ath9k_tx，那么问题来了，mac80211准备发包的时候是如何call到ath9k的呢？ 回到mac80211中，发送tx的函数是ieee80211_tx()，其中会call到drv_tx()，目测这个是给下层发送的函数 在mac80211中，定义drv_tx，这里是进入ath9k的入口  1 2 3 4 5 6  static inline void drv_tx(struct ieee80211_local *local,struct ieee80211_tx_control *control,struct sk_buff *skb){local-&amp;gt;ops-&amp;gt;tx(&amp;amp;local-&amp;gt;hw, control, skb);}   mac80211中定义ieee80211_local，包含了硬件的信息，其中ops的结构  1  const struct ieee80211_ops *ops; //即为上面定义ath_tx的位置   那么drv_tx()的skb是哪里来的呢？ drv_tx应用在ieee80211_tx_frags中，作用就是把经过mac80211的skb_queue处理并把其中的skb向ath9k发送 这个函数应用在__ieee80211_tx中，具体会在下面的ieee80211部分进行说明  1 2 3 4 5  static bool ieee80211_tx_frags(struct ieee80211_local *local,struct ieee80211_vif *vif,struct ieee80211_sta *sta,struct sk_buff_head *skbs,bool txpending)   总结  tx的流程：ieee80211_tx() &amp;mdash;&amp;gt; drv_tx() &amp;mdash;&amp;gt; ath9k_tx()    ieee80211的接口 ieee80211的入口 1  ieee80211_subif_start_xmit   先说一下这个函数是如何被call到的 在iface的函数中，定义了ieee80211的一系列ops  1 2 3 4 5 6 7  static const struct net_device_ops ieee80211_dataif_ops = {.</description>
    </item>
    
    <item>
      <title>Docker学习笔记</title>
      <link>/zh/2020/03/docker_1/</link>
      <pubDate>Wed, 11 Mar 2020 14:17:40 +1100</pubDate>
      
      <guid>/zh/2020/03/docker_1/</guid>
      <description>安装  ubuntu 安装docker ubuntu 安装 docker-compose   docker 环境遇到的问题 Reference  安装 ubuntu 安装docker 1 2 3 4 5 6 7 8  sudo apt-get updatesudo apt install apt-transport-https ca-certificates curl software-properties-commoncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable&amp;#34;sudo apt-get updateapt-cache policy docker-ce # 验证docker repo添加成功sudo apt-get install docker-ce # 安装dockersudo systemctl status docker # 验证docker安装成功  ubuntu 安装 docker-compose 1 2 3  sudo curl -L &amp;#34;https://github.</description>
    </item>
    
    <item>
      <title>Shell脚本笔记</title>
      <link>/zh/2020/03/shell_script/</link>
      <pubDate>Tue, 10 Mar 2020 12:11:04 +1100</pubDate>
      
      <guid>/zh/2020/03/shell_script/</guid>
      <description>关于shell脚本的一些基本命令记录</description>
    </item>
    
    <item>
      <title>VScode实用插件</title>
      <link>/zh/2020/03/vscode_plugin/</link>
      <pubDate>Thu, 05 Mar 2020 00:53:31 +1100</pubDate>
      
      <guid>/zh/2020/03/vscode_plugin/</guid>
      <description>陆续更新中
Arduino  specify the arduino path User.setting -&amp;gt; arduino configuration
Cmd path 是启动脚本所在路径，是在arduino应用文件中的路径
Path 是应用所在路径，是在local目录下的路径 右下角 Select 编译器，板子和端口号
编译器和板子可以回到arduino中查看
vscode-arduino-右下标 右上角 操作
vscode-arduino-右上标
分别是：上传，验证，open changes 验证 生成暂时的.vscode文件夹，存储配置信息  SFTP  远程连接服务器 使用vscode编译服务器端程序 设置 1 2 3 4 5 6 7  {&amp;#34;comment&amp;#34;: &amp;#34;comment&amp;#34;,&amp;#34;host&amp;#34;: &amp;#34;ip&amp;#34;,&amp;#34;port&amp;#34;: 22,&amp;#34;username&amp;#34;: &amp;#34;root&amp;#34;,&amp;#34;privateKeyFile&amp;#34;: &amp;#34;_Path_to_the_key_&amp;#34;}   缺点  到现在我都没找到配置文件搁哪，遂卸    Remote-SSH  比SFTP更好用 配置文件清晰 terminal中直接进入远程的terminal路径 缺点  不能远程联入mac系统    </description>
    </item>
    
    <item>
      <title>Markdown 使用笔记</title>
      <link>/zh/2020/02/markdown/</link>
      <pubDate>Thu, 06 Feb 2020 23:55:28 +0800</pubDate>
      
      <guid>/zh/2020/02/markdown/</guid>
      <description>Tools Basics  调整图片大小    Tools  Typora：支持全平台，可以直接傻瓜式编辑，也可以通过html语句来进行编辑，有模板可以选择，相当于轻量级latex； VScode Markdown All in one：VScode中使用量最大的markdown插件，轻量使用方便，直接markdown语法进行编辑，vscode重度依赖者的福音，支持快捷键输入（cmd+B等），ctrl+shift+p选择指令  Basics 1 2 3 4 5 6 7 8 9 10 11 12 13 14  1. &amp;#39;#&amp;#39; 大标题，&amp;#39;##&amp;#39;,&amp;#39;##...#&amp;#39;,依次为次标题，次...次标题2. &amp;#39;**&amp;#39; 斜体3. ‘****’ 加粗4. &amp;#39;[x] task&amp;#39; 添加任务5. - one: 添加序号，可用tab降级6. | 来制作表格，ctrl+shift+I: 转换成table7. &amp;#39;$$ $$&amp;#39; 制作数学公式8. [tag](Link): 添加链接9. 添加图片(本地)：![Alt text](path)10. 文字居中：&amp;lt;center&amp;gt;hhh &amp;lt;/center&amp;gt;11. 任务列表 - [ ] task- [x] 完成的task12.</description>
    </item>
    
  </channel>
</rss>